#!/usr/bin/env tclsh
#
# minimal "plumber"


fconfigure stdout -translation lf
fconfigure stderr -translation lf

set plumbfile "~/.plumb"
set plumbing_rules {}
set executing_rules {}
set ws [pwd]
set attrs [dict create]
set info 0


proc Usage {{code 1}} {
    puts stderr {usage: plumb [-p FILENAME] [-h] [-a NAME=VAL] [-w DIR] [-i] [--] STRING ...}
    exit $code
}


proc Plumb {pat code} {
    global plumbing_rules
    lappend plumbing_rules [list $pat $code]
}


proc Execute {pat code} {
    global executing_rules
    lappend executing_rules [list $pat $code]
}


proc GetArg {{i 1}} {
    global command_arguments
    return [lindex $command_arguments $i]
}


proc TempFile {} {
    global env
    set tmpdir "/tmp"

    if {[info exists env(TMPDIR)]} {
        set tmpdir $env(TMPDIR)
    }

    return "$tmpdir/0.[pid].[expr rand()]"
}


proc GetAttr {name {default ""}} {
    global attrs

    if {[dict exists $attrs $name]} {
        return [dict get $attrs $name]
    }

    return $default
}


proc Run args {
    exec {*}$args 2>@ stderr < /dev/null &
}


proc RunOutput args {
    exec {*}$args 2>@ stderr < /dev/null | ma-eval &
}


if {[info exists env(HERE)] && [file exists $env(HERE)/lib/plumb]} {
    source $env(HERE)/lib/plumb
}

set str ""

for {set i 0} {$i < $argc} {incr i} {
    set arg [lindex $argv $i]

    switch -regex -- $arg {
        {^--?h(elp)?$} {Usage 0}
        {^-p$} {
            incr i
            set plumbfile [lindex $argv $i]
        }
        {^-w$} {
            incr i
            cd [lindex $argv $i]
        }
        {^-a$} {
            incr i
            set arg [lindex $argv $i]

            if {[regexp {^([^=]+)=(\S+)$} $arg _ n v]} {
                dict set attrs $n $v
            } else Usage
        }
        {^-i$} {set info 1}
        {^--$} {
            set str [concat $str [lrange $argv [expr $i + 1] end]]
            set i $argc
        }
        {^-} Usage
        default {lappend str $arg}
    }
}

if {[file exists $plumbfile]} {
    source $plumbfile
}

close stdout
set str [string trim [join $str]]
set mode [GetAttr mode plumb]
set rules $plumbing_rules

if {$mode == "exec"} {
    set rules $executing_rules
}

foreach r $rules {
   set command_arguments [regexp -inline -- [lindex $r 0] $str]

    if {$command_arguments != ""} {
        if {$info} {puts stderr $command_arguments}

        set x [apply [list {} [lindex $r 1]]]

        if {$x != 0} exit
    }
}

exit 1
