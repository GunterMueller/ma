# default plumbing rules
#
# rules are tried in the order given, return 0 if the rule should be
# skipped.
#
# Now, customize!


set browser firefox
set image_viewer sxiv
set pdf_viewer mupdf

Plumb {^.*\.zip$} {
    if {[file exists [GetArg 0]]} {
        RunOutput unzip -l [GetArg 0]
        return 1
    }
    return 0
}

Plumb {^.*\.tar\..*$} {
    if {[file exists [GetArg 0]]} {
        RunOutput tar tf [GetArg 0]
        return 1
    }
    return 0
}

Plumb {^#([[:digit:]]+)} {
    exec plumb "https://bugs.call-cc.org/ticket/[GetArg 1]"
    return 1
}

Plumb {^<mail:(.+)>$} {
    Run Mail [GetArg 1]
    return 1
}

# scheme documentation "(path to manual page)"
Plumb {^\((.+)\)$} {
    set page [split [GetArg 1]]
    RunOutput chicken-doc $page
    return 1
}

# image files
Plumb {^(.+)(.png|.jpg|.jpeg|.gif)$} {
    set fname [GetArg 0]
    if {[file exists $fname]} {
       global image_viewer
       Run $image_viewer $fname
       return 1
    }
    return 0
}

# PDF files
Plumb {^(.+).pdf$} {
    set fname [GetArg 0]
    if {[file exists $fname]} {
        global pdf_viewer
        Run $pdf_viewer $fname
        return 1
    }
    return 0
}

# <URL>
Plumb {^(http|https|ftp)://[-A-Za-z0-9_.+%/&?=#~:]+$} { 
    global browser
    Run $browser [GetArg 0] 
    return 1
}

# "..." / "<...>" (include file)

set include_path {"/usr/include"}

if {[info exists env(C_INCLUDE_PATH)]} {
    set include_path [concat $include_path [split $env(C_INCLUDE_PATH) ":"]]
}

proc FindInPath {fname path} {
    set found {}

    foreach x $path {
        set fn [file join $x $fname]
    
        if {[file exists $fn]} {
            lappend found $fn
        }
    }

    return $found
}

proc GotoIncludeFile {fname} {
    global include_path
    set found [FindInPath $fname $include_path]

    if {$found != ""} {
        Run B [lindex $found 0]
        return 1
    }

    return 0
}

Plumb {^"([^"]+)"$} {return [GotoIncludeFile [GetArg]]}
Plumb {^<([^>]+)>$} {return [GotoIncludeFile [GetArg]]}

# <manpage>(<n>)
Plumb {^(\S+)\((\d+)\)$} {
    RunOutput man [GetArg 2] [GetArg 1]
    return 1
}

# <file>:[<addr>]
Plumb {^(.*):([^:]*)$} {
    set fname [GetArg 0]
    if {[file exists $fname]} {
        Run B $fname
        return 1
    }

    set fname [GetArg 1]
    set address [GetArg 2]
    if {[file exists $fname]} {
        Run B "$fname:$address"
        return 1
    }
    return 0
}
